{
    "0":  {
        "name": "Add Two Numbers",
        "description": "Write a function that adds two numbers together",
        "stub": "def add_two_numbers(a: int, b: int) -> int:\n",
        "level": 1,
        "test_cases": [
            {
                "input": [2, 3],
                "expected": 5
            },
            {
                "input": [0, 0],
                "expected": 0
            },
            {
                "input": [-2, -2],
                "expected": -4
            },
            {
                "input": [-5, 5],
                "expected": 0
            },
            {
                "input": [49130284092849028, 1230981290],
                "expected": 49130285323830318
            }
        ]
    },
    "1": {
        "name": "How Many Apples",
        "description": "Bob has N apples, Mary has X more apples than Bob, and Joe has Y times as many apples as Mary. Write a function that returns the amount of apples that Joe has",
        "stub": "def joes_apples(n: int, x: int, y: int) -> int:\n",
        "level": 2,
        "test_cases": [
            {
                "input": [4,5,3],
                "expected": 27
            },
            {
                "input": [0,1,0],
                "expected": 0
            },
            {
                "input": [2,2,2],
                "expected": 8
            },
            {
                "input": [1,1,1],
                "expected": 2
            }

        ]
    },
    "2": {
        "name": "String Sum",
        "description": "Given a string containing a comma separated list of numbers, compute the sum.",
        "level": 3,
        "stub": "def string_sum(s: str) -> int:\n",
        "test_cases": [
            {
                "input": ["1,2,3"],
                "expected": 6
            },
            {
                "input": ["-1,-1,-1"],
                "expected": -3
            },
            {
                "input": ["0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15"],
                "expected": 120
            },
            {
                "input": ["10000000000000000"],
                "expected": 10000000000000000
            }
        ]
    },
    "3": {
        "name": "Does Harry Suck?",
        "description": "return true if harry sucks, given N",
        "level": 1,
        "stub": "def does_harry_suck(n: int) -> bool:\n",
        "test_cases": [
            {
                "input": [1],
                "expected": true
            },
            {
                "input": [0],
                "expected": true
            }
        ]
    }
}